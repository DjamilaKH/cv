{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let EditcvComponent = class EditcvComponent {\n  constructor(router, route, cvService, formBuilder) {\n    this.router = router;\n    this.route = route;\n    this.cvService = cvService;\n    this.formBuilder = formBuilder;\n    this.iseditCv = this.router.url.includes('edit');\n    this.cvForm = this.formBuilder.group({\n      // photoCv: [''],\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telephone: ['', [Validators.required, this.validateTelephoneFormat]],\n      titCV: ['', Validators.required],\n      profilCv: ['', Validators.required],\n      objecCarri: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n      if (cvId) {\n        this.cvService.get(+cvId).subscribe(data => {\n          this.cv = data;\n          console.log(\"le cv à modifier est \", this.cv);\n        });\n      }\n    }\n  }\n};\n__decorate([HostListener('click', ['$event.target'])], EditcvComponent.prototype, \"ngOnInit\", null);\nEditcvComponent = __decorate([Component({\n  selector: 'app-editcv',\n  template: `\n  <h1 class=\"center\">Modifier CV {{cv?.nom}}</h1>\n  <p>{{cv?.titCV}}</p>\n  <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`\n})], EditcvComponent);","map":{"version":3,"names":["Component","HostListener","EditcvComponent","constructor","router","route","cvService","formBuilder","iseditCv","url","includes","cvForm","group","nom","Validators","required","prenom","email","telephone","validateTelephoneFormat","titCV","profilCv","objecCarri","ngOnInit","cvId","snapshot","paramMap","get","subscribe","data","cv","console","log","__decorate","selector","template"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, HostListener, Input, OnInit} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `\n  <h1 class=\"center\">Modifier CV {{cv?.nom}}</h1>\n  <p>{{cv?.titCV}}</p>\n  <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent implements OnInit {\n  iseditCv!: boolean;\n   cv!: Cv|undefined ;\n   cvForm!: FormGroup;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private cvService: CvService,\n    private formBuilder: FormBuilder,\n  )\n  {\n    this.iseditCv=this.router.url.includes('edit')\n    this.cvForm = this.formBuilder.group({\n      // photoCv: [''],\n      nom: (['', Validators.required]) ,\n      prenom:(['', Validators.required]),\n      email:  (['', [Validators.required, Validators.email]]),\n      telephone:(['', [Validators.required, this.validateTelephoneFormat]]),\n      titCV: (['', Validators.required]),\n      profilCv: (['', Validators.required]),\n      objecCarri: (['', [Validators.required]]),\n    });\n  }\n  @HostListener('click', ['$event.target'])\n  ngOnInit() {\n    const cvId: string|null = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe((data) => { this.cv = data\n        console.log(\"le cv à modifier est \", this.cv)\n      });\n    }}}}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAsB,eAAe;AAc9D,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,SAAoB,EACpBC,WAAwB;IAHxB,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,WAAW,GAAXA,WAAW;IAGnB,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC;IAC9C,IAAI,CAACC,MAAM,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACnC;MACAC,GAAG,EAAG,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAE;MAChCC,MAAM,EAAE,CAAC,EAAE,EAAEF,UAAU,CAACC,QAAQ,CAAE;MAClCE,KAAK,EAAI,CAAC,EAAE,EAAE,CAACH,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACG,KAAK,CAAC,CAAE;MACvDC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACJ,UAAU,CAACC,QAAQ,EAAE,IAAI,CAACI,uBAAuB,CAAC,CAAE;MACrEC,KAAK,EAAG,CAAC,EAAE,EAAEN,UAAU,CAACC,QAAQ,CAAE;MAClCM,QAAQ,EAAG,CAAC,EAAE,EAAEP,UAAU,CAACC,QAAQ,CAAE;MACrCO,UAAU,EAAG,CAAC,EAAE,EAAE,CAACR,UAAU,CAACC,QAAQ,CAAC;KACxC,CAAC;EACJ;EAEAQ,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAgB,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAChE,IAAI,IAAI,CAACnB,QAAQ,EAAE;MACnB,IAAIgB,IAAI,EAAE;QACR,IAAI,CAAClB,SAAS,CAACqB,GAAG,CAAC,CAACH,IAAI,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAI;UAAG,IAAI,CAACC,EAAE,GAAGD,IAAI;UAC5DE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACF,EAAE,CAAC;QAC/C,CAAC,CAAC;;;EACF;CAAE;AAPNG,UAAA,EADChC,YAAY,CAAC,OAAO,EAAE,CAAC,eAAe,CAAC,CAAC,C,8CAQpC;AA/BMC,eAAe,GAAA+B,UAAA,EAR3BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE;;;;;CAKX,CAAC,C,EACWjC,eAAe,CA+BpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}