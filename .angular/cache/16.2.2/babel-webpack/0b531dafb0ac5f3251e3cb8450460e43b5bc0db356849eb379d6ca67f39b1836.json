{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_app_formmcv_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r0.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(route, cvService) {\n    this.route = route;\n    this.cvService = cvService;\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe(data => {\n        this.cv = data;\n      });\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  inputs: {\n    cv: \"cv\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"center\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, EditcvComponent_app_formmcv_2_Template, 1, 1, \"app-formmcv\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.cv == null ? null : ctx.cv.nom);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","cv","EditcvComponent","constructor","route","cvService","ngOnInit","cvId","snapshot","paramMap","get","subscribe","data","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CvService","selectors","inputs","decls","vars","consts","template","EditcvComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","EditcvComponent_app_formmcv_2_Template","ɵɵadvance","ɵɵtextInterpolate","nom"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, Input} from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `<h2 class=\"center\">{{cv?.nom}}</h2>\n  <app-formmcv *ngIf=\"cv\"[cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent {\n @Input() cv: Cv|undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private cvService: CvService,\n  ){}\n\n\n\n  ngOnInit() {\n    const cvId: string | null = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe((data) => {\n        this.cv = data;\n      });\n    }}}\n\n\n"],"mappings":";;;;;;;;IAQEA,EAAA,CAAAC,SAAA,qBAA+C;;;;IAAxBD,EAAA,CAAAE,UAAA,OAAAC,MAAA,CAAAC,EAAA,CAAS;;;AAGlC,OAAM,MAAOC,eAAe;EAE1BC,YACUC,KAAqB,EACrBC,SAAoB;IADpB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;EACjB;EAIFC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAkB,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClE,IAAIH,IAAI,EAAE;MACR,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,CAACH,IAAI,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAI;QAC3C,IAAI,CAACX,EAAE,GAAGW,IAAI;MAChB,CAAC,CAAC;;EACH;;SAfQV,eAAe;;mBAAfA,MAAe,EAAAL,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAlB,EAAA,CAAAgB,iBAAA,CAAAG,EAAA,CAAAC,SAAA;AAAA;;QAAff,MAAe;EAAAgB,SAAA;EAAAC,MAAA;IAAAlB,EAAA;EAAA;EAAAmB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAJf5B,EAAA,CAAA8B,cAAA,YAAmB;MAAA9B,EAAA,CAAA+B,MAAA,GAAW;MAAA/B,EAAA,CAAAgC,YAAA,EAAK;MAC9ChC,EAAA,CAAAiC,UAAA,IAAAC,sCAAA,yBAA+C;;;MADjBlC,EAAA,CAAAmC,SAAA,GAAW;MAAXnC,EAAA,CAAAoC,iBAAA,CAAAP,GAAA,CAAAzB,EAAA,kBAAAyB,GAAA,CAAAzB,EAAA,CAAAiC,GAAA,CAAW;MAC3BrC,EAAA,CAAAmC,SAAA,GAAQ;MAARnC,EAAA,CAAAE,UAAA,SAAA2B,GAAA,CAAAzB,EAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}