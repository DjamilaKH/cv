{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let FormmcvComponent = class FormmcvComponent {\n  constructor(formBuilder, router, dialog, cvService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.dialog = dialog;\n    this.cvService = cvService;\n    this.filteredSecteurs = [];\n    this.countries = ['Tunisie', 'France', 'Allemagne'];\n    this.regions = ['Berlin', 'Lyon', 'Nice', 'Versailles', 'Tours', 'Paris', 'Toulouse', 'Strasbourg', 'Nantes', 'Tunis', 'Siliana', 'Jendouba', 'Kef', 'Sfax', 'Beja', 'Sousse', 'Monastir', 'Zaghouan', 'Nabeul', 'Munich', 'Hambourg', 'Francfort', 'Cologne'];\n    this.options = ['Temps plein', 'Temps partiel'];\n    this.selectedOption = '';\n    this.contrat = ['CDI', 'CDD', 'Freelance', 'Alternance'];\n    this.selectedContrat = '';\n    this.filteredConnaissances = [];\n    this.connaissancesList = [];\n    this.cvForm = this.formBuilder.group({\n      photoCv: [''],\n      nom: [''],\n      prenom: [''],\n      email: [''],\n      telephone: [''],\n      titCV: [''],\n      profilCv: [''],\n      sectCom: [''],\n      domaCom: [''],\n      comp: [''],\n      typCont: [''],\n      regiTrava: [''],\n      payLTS: [''],\n      regiLTS: [''],\n      objecCarri: ['']\n    });\n  }\n  ngOnInit() {\n    this.isAddCv = this.router.url.includes('add');\n    // mapboxgl.accessToken = 'pk.eyJ1Ijoibm91cmlqYW0iLCJhIjoiY2xqeTVhcTRrMDF1djN0bnp6OXp0dW1tcCJ9.USTPHwYjnvdicDrPAv0PcQ';\n    // const map = new mapboxgl.Map({\n    //   container: 'map',\n    //   style: 'mapbox://styles/mapbox/streets-v11',\n    //   center: [0, 0], \n    //   zoom: 1 \n    // });\n    // this.onCountrySelect();\n  }\n  // onCountrySelect() {\n  //   const coordinates = this.getCoordinatesForCountry(this.selectedCountry, this.selectedRegion);\n  //   if (coordinates) {\n  //     const map = new mapboxgl.Map({\n  //       container: 'map',\n  //       style: 'mapbox://styles/mapbox/streets-v11',\n  //       center: coordinates, \n  //       zoom: 10 \n  //     });\n  //   }\n  // }\n  onSubmit() {\n    this.cv = this.cvForm.value;\n    if (this.isAddCv) {\n      this.cvService.create(this.cv).subscribe({\n        next: res => {\n          console.log(res);\n          this.router.navigate(['/']);\n        },\n        error: e => console.error(e)\n      });\n    }\n  }\n};\n__decorate([Input()], FormmcvComponent.prototype, \"cv\", void 0);\nFormmcvComponent = __decorate([Component({\n  selector: 'app-formmcv',\n  templateUrl: './formmcv.component.html',\n  styleUrls: ['./formmcv.component.css']\n})], FormmcvComponent);","map":{"version":3,"names":["Component","Input","FormmcvComponent","constructor","formBuilder","router","dialog","cvService","filteredSecteurs","countries","regions","options","selectedOption","contrat","selectedContrat","filteredConnaissances","connaissancesList","cvForm","group","photoCv","nom","prenom","email","telephone","titCV","profilCv","sectCom","domaCom","comp","typCont","regiTrava","payLTS","regiLTS","objecCarri","ngOnInit","isAddCv","url","includes","onSubmit","cv","value","create","subscribe","next","res","console","log","navigate","error","e","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\formmcv\\formmcv.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-formmcv',\n  templateUrl: './formmcv.component.html',\n  styleUrls: ['./formmcv.component.css']\n})\nexport class FormmcvComponent {\n  @Input() cv!: Cv;\n  cvForm!: FormGroup;\n  isAddCv!: boolean;\n  selectedDomaine!: string;\n  selectedSecteur!: string | null;\n  filteredSecteurs: string[] = [];\n  selectedCountry!: string;\n  selectedRegion!: string;\n  countries: string[] = ['Tunisie', 'France','Allemagne'];\n  regions: string[] = ['Berlin', 'Lyon', 'Nice', 'Versailles', 'Tours', 'Paris', 'Toulouse','Strasbourg', 'Nantes', 'Tunis', 'Siliana', 'Jendouba', 'Kef', 'Sfax', 'Beja', 'Sousse', 'Monastir', 'Zaghouan', 'Nabeul', 'Munich', 'Hambourg', 'Francfort', 'Cologne' ];\n  \n  \n  options: string[] = ['Temps plein', 'Temps partiel']; \n  selectedOption: string = ''; \n  contrat: string[] =['CDI','CDD','Freelance','Alternance'];\n  selectedContrat: string = ''; \n  exForm!: FormGroup ;\n  filteredConnaissances: string[] = [];\n  connaissancesList: any[] = [];\n  constructor(private formBuilder: FormBuilder,private router: Router,private dialog: MatDialog,private cvService: CvService,) { \n    this.cvForm = this.formBuilder.group({\n      photoCv: [''],\n      nom: [''],\n      prenom: [''],\n      email: [''],\n      telephone: [''],\n      titCV: [''],\n      profilCv: [''],\n      sectCom: [''],\n      domaCom: [''],\n      comp: [''],\n      typCont: [''],\n      regiTrava: [''],\n      payLTS: [''],\n      regiLTS: [''],\n      objecCarri: [''],\n    });\n  }\n  \n  ngOnInit() {\n    this.isAddCv=this.router.url.includes('add')\n    // mapboxgl.accessToken = 'pk.eyJ1Ijoibm91cmlqYW0iLCJhIjoiY2xqeTVhcTRrMDF1djN0bnp6OXp0dW1tcCJ9.USTPHwYjnvdicDrPAv0PcQ';\n    // const map = new mapboxgl.Map({\n    //   container: 'map',\n    //   style: 'mapbox://styles/mapbox/streets-v11',\n    //   center: [0, 0], \n    //   zoom: 1 \n    // });\n  \n    // this.onCountrySelect();\n  \n  \n  }\n  // onCountrySelect() {\n  //   const coordinates = this.getCoordinatesForCountry(this.selectedCountry, this.selectedRegion);\n  //   if (coordinates) {\n  //     const map = new mapboxgl.Map({\n  //       container: 'map',\n  //       style: 'mapbox://styles/mapbox/streets-v11',\n  //       center: coordinates, \n  //       zoom: 10 \n  //     });\n  //   }\n  // }\n  \n  onSubmit() {\n    this.cv = this.cvForm.value;\n    if (this.isAddCv) {\n      this.cvService.create(this.cv).subscribe({\n        next:(res)=>{\n          console.log(res);\n\n          this.router.navigate(['/']);\n        },\n        error: (e) => console.error(e)\n\n\n      })\n          \n    }\n  }\n  \n  // avatarPreview: string | undefined;\n  // onFileSelected(event: any) {\n  //   const file = event.target.files[0];\n  //   if (file) {\n  //     const reader = new FileReader();\n  //     reader.readAsDataURL(file);\n  //     reader.onload = () => {\n  //       this.avatarPreview = reader.result as string;\n  //       this.cvForm.controls['photoCv'].setValue(this.avatarPreview);\n  //     };\n  //   }\n  // }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAYzC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAoB3BC,YAAoBC,WAAwB,EAASC,MAAc,EAASC,MAAiB,EAASC,SAAoB;IAAtG,KAAAH,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,MAAM,GAANA,MAAM;IAAoB,KAAAC,SAAS,GAATA,SAAS;IAd/G,KAAAC,gBAAgB,GAAa,EAAE;IAG/B,KAAAC,SAAS,GAAa,CAAC,SAAS,EAAE,QAAQ,EAAC,WAAW,CAAC;IACvD,KAAAC,OAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAC,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAE;IAGnQ,KAAAC,OAAO,GAAa,CAAC,aAAa,EAAE,eAAe,CAAC;IACpD,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,OAAO,GAAY,CAAC,KAAK,EAAC,KAAK,EAAC,WAAW,EAAC,YAAY,CAAC;IACzD,KAAAC,eAAe,GAAW,EAAE;IAE5B,KAAAC,qBAAqB,GAAa,EAAE;IACpC,KAAAC,iBAAiB,GAAU,EAAE;IAE3B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;MACnCC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,GAAG,EAAE,CAAC,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC,EAAE;KAChB,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,GAAC,IAAI,CAAC9B,MAAM,CAAC+B,GAAG,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC5C;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACtB,MAAM,CAACuB,KAAK;IAC3B,IAAI,IAAI,CAACL,OAAO,EAAE;MAChB,IAAI,CAAC5B,SAAS,CAACkC,MAAM,CAAC,IAAI,CAACF,EAAE,CAAC,CAACG,SAAS,CAAC;QACvCC,IAAI,EAAEC,GAAG,IAAG;UACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAEhB,IAAI,CAACvC,MAAM,CAAC0C,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;QACDC,KAAK,EAAGC,CAAC,IAAKJ,OAAO,CAACG,KAAK,CAACC,CAAC;OAG9B,CAAC;;EAGN;CAeD;AA/FUC,UAAA,EAARjD,KAAK,EAAE,C,2CAAS;AADNC,gBAAgB,GAAAgD,UAAA,EAL5BlD,SAAS,CAAC;EACTmD,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWnD,gBAAgB,CAgG5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}