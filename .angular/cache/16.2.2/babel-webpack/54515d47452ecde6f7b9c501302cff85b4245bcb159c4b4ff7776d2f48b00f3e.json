{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.cv.titCV, \" \");\n  }\n}\nfunction EditcvComponent_app_formmcv_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r1.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(route, CVService) {\n    this.route = route;\n    this.CVService = CVService;\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.CVService.get(+cvId).subscribe({\n        next: cv => {\n          this.cv = cv;\n        }\n      });\n    } else {\n      this.cv = undefined;\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"center\"], [\"class\", \"center\", 4, \"ngIf\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, EditcvComponent_p_2_Template, 2, 1, \"p\", 1);\n      i0.ɵɵtemplate(3, EditcvComponent_app_formmcv_3_Template, 1, 1, \"app-formmcv\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Editer \", ctx.cv == null ? null : ctx.cv.nom, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","cv","titCV","ɵɵelement","ɵɵproperty","ctx_r1","EditcvComponent","constructor","route","CVService","ngOnInit","cvId","snapshot","paramMap","get","subscribe","next","undefined","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CvService","selectors","decls","vars","consts","template","EditcvComponent_Template","rf","ctx","ɵɵtemplate","EditcvComponent_p_2_Template","EditcvComponent_app_formmcv_3_Template","nom"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `  <h2 class=\"center\">Editer {{ cv?.nom}}</h2>\n  <p *ngIf=\"cv\" class= \"center\">\n    {{cv.titCV}}\n  </p>\n <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent {\n  cv: Cv | undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private CVService: CvService\n  ){ }\n\n\n\n  ngOnInit() {\n    const cvId: string|null= this.route.snapshot.paramMap.get('id');\n    if(cvId){\n      this.CVService.get(+cvId)\n      .subscribe({next:(cv) =>{ this.cv = cv}} );\n    }else{\n      this.cv = undefined;\n    }\n  }\n\n}\n"],"mappings":";;;;;;;;IAQEA,EAAA,CAAAC,cAAA,WAA8B;IAC5BD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADFH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,EAAA,CAAAC,KAAA,MACF;;;;;IACDR,EAAA,CAAAS,SAAA,qBAAgD;;;;IAAxBT,EAAA,CAAAU,UAAA,OAAAC,MAAA,CAAAJ,EAAA,CAAS;;;AAGlC,OAAM,MAAOK,eAAe;EAE1BC,YACUC,KAAqB,EACrBC,SAAoB;IADpB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;EAChB;EAIHC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAe,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAC/D,IAAGH,IAAI,EAAC;MACN,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,CAACH,IAAI,CAAC,CACxBI,SAAS,CAAC;QAACC,IAAI,EAAEf,EAAE,IAAI;UAAE,IAAI,CAACA,EAAE,GAAGA,EAAE;QAAA;MAAC,CAAC,CAAE;KAC3C,MAAI;MACH,IAAI,CAACA,EAAE,GAAGgB,SAAS;;EAEvB;;SAjBWX,eAAe;;mBAAfA,MAAe,EAAAZ,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1B,EAAA,CAAAwB,iBAAA,CAAAG,EAAA,CAAAC,SAAA;AAAA;;QAAfhB,MAAe;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAPbnC,EAAA,CAAAC,cAAA,YAAmB;MAAAD,EAAA,CAAAE,MAAA,GAAmB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACxDH,EAAA,CAAAqC,UAAA,IAAAC,4BAAA,eAEI;MACLtC,EAAA,CAAAqC,UAAA,IAAAE,sCAAA,yBAAgD;;;MAJfvC,EAAA,CAAAI,SAAA,GAAmB;MAAnBJ,EAAA,CAAAK,kBAAA,YAAA+B,GAAA,CAAA7B,EAAA,kBAAA6B,GAAA,CAAA7B,EAAA,CAAAiC,GAAA,KAAmB;MAC/CxC,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAU,UAAA,SAAA0B,GAAA,CAAA7B,EAAA,CAAQ;MAGCP,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAU,UAAA,SAAA0B,GAAA,CAAA7B,EAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}