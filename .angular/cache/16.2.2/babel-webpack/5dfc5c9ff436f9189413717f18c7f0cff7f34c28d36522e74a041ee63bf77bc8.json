{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_app_formmcv_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r0.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(router, route, cvService) {\n    this.router = router;\n    this.route = route;\n    this.cvService = cvService;\n    this.iseditCv = this.router.url.includes('edit');\n    this.cvForm = this.formBuilder.group({\n      // photoCv: [''],\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telephone: ['', [Validators.required, this.validateTelephoneFormat]],\n      titCV: ['', Validators.required],\n      profilCv: ['', Validators.required],\n      objecCarri: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n      if (cvId) {\n        this.cvService.get(+cvId).subscribe(data => {\n          this.cv = data;\n          console.log(\"le cv à modifier est \", this.cv);\n        });\n      }\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  hostBindings: function EditcvComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditcvComponent_click_HostBindingHandler($event) {\n        return ctx.ngOnInit($event.target);\n      });\n    }\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"center\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, EditcvComponent_app_formmcv_4_Template, 1, 1, \"app-formmcv\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Modifier CV \", ctx.cv == null ? null : ctx.cv.nom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.cv == null ? null : ctx.cv.titCV);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","cv","EditcvComponent","constructor","router","route","cvService","iseditCv","url","includes","cvForm","formBuilder","group","nom","Validators","required","prenom","email","telephone","validateTelephoneFormat","titCV","profilCv","objecCarri","ngOnInit","cvId","snapshot","paramMap","get","subscribe","data","console","log","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","CvService","selectors","hostBindings","EditcvComponent_HostBindings","rf","ctx","$event","target","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","EditcvComponent_app_formmcv_4_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, HostListener, Input, OnInit} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `\n  <h1 class=\"center\">Modifier CV {{cv?.nom}}</h1>\n  <p>{{cv?.titCV}}</p>\n  <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent implements OnInit {\n  iseditCv!: boolean;\n   cv!: Cv|undefined ;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private cvService: CvService,\n  )\n  {\n    this.iseditCv=this.router.url.includes('edit')\n    this.cvForm = this.formBuilder.group({\n      // photoCv: [''],\n      nom: (['', Validators.required]) ,\n      prenom:(['', Validators.required]),\n      email:  (['', [Validators.required, Validators.email]]),\n      telephone:(['', [Validators.required, this.validateTelephoneFormat]]),\n      titCV: (['', Validators.required]),\n      profilCv: (['', Validators.required]),\n      objecCarri: (['', [Validators.required]]),\n    });\n  }\n  @HostListener('click', ['$event.target'])\n  ngOnInit() {\n    const cvId: string|null = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe((data) => { this.cv = data\n        console.log(\"le cv à modifier est \", this.cv)\n      });\n    }}}}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}