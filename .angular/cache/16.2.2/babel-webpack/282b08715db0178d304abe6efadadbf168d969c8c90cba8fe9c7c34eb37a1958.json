{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_app_formmcv_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r0.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(route, cvService) {\n    this.route = route;\n    this.cvService = cvService;\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe(data => {\n        this.cv = data;\n        console.log(this.cv);\n      });\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  inputs: {\n    cv: \"cv\"\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"center\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, EditcvComponent_app_formmcv_4_Template, 1, 1, \"app-formmcv\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Modifier CV \", ctx.cv == null ? null : ctx.cv.nom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.cv == null ? null : ctx.cv.titCV);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","cv","EditcvComponent","constructor","route","cvService","ngOnInit","cvId","snapshot","paramMap","get","subscribe","data","console","log","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CvService","selectors","inputs","decls","vars","consts","template","EditcvComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","EditcvComponent_app_formmcv_4_Template","ɵɵadvance","ɵɵtextInterpolate1","nom","ɵɵtextInterpolate","titCV"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, Input} from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `\n  <h1 class=\"center\">Modifier CV {{cv?.nom}}</h1>\n  <p>{{cv?.titCV}}</p>\n  <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent {\n  isAddCv!: boolean;\n\n@Input() cv!: Cv|undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private cvService: CvService,\n  ){}\n  ngOnInit() {\n    const cvId: string | null = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe((data) => {\n        this.cv = data\n        console.log(this.cv)\n      });\n    }}}"],"mappings":";;;;;;;;IAUEA,EAAA,CAAAC,SAAA,qBAAgD;;;;IAAxBD,EAAA,CAAAE,UAAA,OAAAC,MAAA,CAAAC,EAAA,CAAS;;;AAGnC,OAAM,MAAOC,eAAe;EAI1BC,YACUC,KAAqB,EACrBC,SAAoB;IADpB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;EACjB;EACFC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAkB,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClE,IAAIH,IAAI,EAAE;MACR,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,CAACH,IAAI,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAI;QAC3C,IAAI,CAACX,EAAE,GAAGW,IAAI;QACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,EAAE,CAAC;MACtB,CAAC,CAAC;;EACH;;SAfQC,eAAe;;mBAAfA,MAAe,EAAAL,EAAA,CAAAkB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAApB,EAAA,CAAAkB,iBAAA,CAAAG,EAAA,CAAAC,SAAA;AAAA;;QAAfjB,MAAe;EAAAkB,SAAA;EAAAC,MAAA;IAAApB,EAAA;EAAA;EAAAqB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAL1B9B,EAAA,CAAAgC,cAAA,YAAmB;MAAAhC,EAAA,CAAAiC,MAAA,GAAuB;MAAAjC,EAAA,CAAAkC,YAAA,EAAK;MAC/ClC,EAAA,CAAAgC,cAAA,QAAG;MAAAhC,EAAA,CAAAiC,MAAA,GAAa;MAAAjC,EAAA,CAAAkC,YAAA,EAAI;MACpBlC,EAAA,CAAAmC,UAAA,IAAAC,sCAAA,yBAAgD;;;MAF7BpC,EAAA,CAAAqC,SAAA,GAAuB;MAAvBrC,EAAA,CAAAsC,kBAAA,iBAAAP,GAAA,CAAA3B,EAAA,kBAAA2B,GAAA,CAAA3B,EAAA,CAAAmC,GAAA,KAAuB;MACvCvC,EAAA,CAAAqC,SAAA,GAAa;MAAbrC,EAAA,CAAAwC,iBAAA,CAAAT,GAAA,CAAA3B,EAAA,kBAAA2B,GAAA,CAAA3B,EAAA,CAAAqC,KAAA,CAAa;MACFzC,EAAA,CAAAqC,SAAA,GAAQ;MAARrC,EAAA,CAAAE,UAAA,SAAA6B,GAAA,CAAA3B,EAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}