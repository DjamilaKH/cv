{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.cv.titCV, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.cv.email, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.cv.telephone, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.cv.profilCv, \" \");\n  }\n}\nfunction EditcvComponent_app_formmcv_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r1.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(route, cvService) {\n    this.route = route;\n    this.cvService = cvService;\n    this.isEditing = false;\n  }\n  onEditClick(target) {\n    if (target.id === 'editButton') {\n      this.isEditing = true;\n    }\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (cvId) {\n      this.cvService.getCVbyId(+cvId).subscribe(cv => this.cv = cv);\n    } else {\n      this.cv = undefined;\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  hostBindings: function EditcvComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditcvComponent_click_HostBindingHandler($event) {\n        return ctx.onEditClick($event.target);\n      });\n    }\n  },\n  decls: 8,\n  vars: 5,\n  consts: [[1, \"center\"], [\"class\", \"center\", 4, \"ngIf\"], [\"id\", \"editButton\", 3, \"click\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, EditcvComponent_p_4_Template, 8, 4, \"p\", 1);\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function EditcvComponent_Template_button_click_5_listener($event) {\n        return ctx.onEditClick($event);\n      });\n      i0.ɵɵtext(6, \"\\u00C9diter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, EditcvComponent_app_formmcv_7_Template, 1, 1, \"app-formmcv\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Modifier CV num\\u00E9ro: \", ctx.cv == null ? null : ctx.cv.id, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" \", ctx.cv == null ? null : ctx.cv.nom, \" \\u00A0\\u00A0\", ctx.cv == null ? null : ctx.cv.prenom, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv && ctx.isEditing);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","cv","titCV","email","telephone","profilCv","ɵɵproperty","ctx_r1","EditcvComponent","constructor","route","cvService","isEditing","onEditClick","target","id","ngOnInit","cvId","snapshot","paramMap","get","getCVbyId","subscribe","undefined","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CvService","selectors","hostBindings","EditcvComponent_HostBindings","rf","ctx","$event","ɵɵtemplate","EditcvComponent_p_4_Template","ɵɵlistener","EditcvComponent_Template_button_click_5_listener","EditcvComponent_app_formmcv_7_Template","ɵɵtextInterpolate2","nom","prenom"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, OnInit, HostListener} from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `\n<h1 class=\"center\">Modifier CV numéro:  {{cv?.id}} <br>  {{cv?.nom}} &nbsp;&nbsp;{{cv?.prenom}} </h1>\n<p *ngIf=\"cv\" class=\"center\">{{cv.titCV}} <br> {{cv.email}} <br>{{cv.telephone}} <br>{{cv.profilCv}}  </p>\n\n<button id=\"editButton\" (click)=\"onEditClick($event)\">Éditer</button>\n\n<app-formmcv *ngIf=\"cv && isEditing\" [cv]=\"cv\"></app-formmcv>\n`,\nstyles: [\n]\n})\nexport class EditcvComponent implements OnInit {\n  isEditing: boolean = false;\n cv: Cv|undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private cvService: CvService,\n  )\n  {}\n \n  @HostListener('click', ['$event.target']) onEditClick(target: HTMLElement) {\n    if (target.id === 'editButton') {\n      this.isEditing = true;\n    }\n  }\n  \n  ngOnInit() {\n    const cvId: string|null = this.route.snapshot.paramMap.get('id');\n\n    if (cvId) {\n      this.cvService.getCVbyId(+cvId).subscribe(cv=>  this.cv = cv);\n    }\n    else {\n      this.cv = undefined;\n    }}}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}