{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/cvs';\nexport class CvService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(data, id) {\n    co;\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  getCvById(id) {\n    return this.http.get(`${baseUrl}?id=${id}`);\n  }\n}\n_class = CvService;\n_class.ɵfac = function CvService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["baseUrl","CvService","constructor","http","getAll","get","id","create","data","post","update","co","put","delete","getCvById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\service\\cv.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpEvent,HttpResponse  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cv } from '../models/cv.model';\nconst baseUrl = 'http://localhost:8080/api/cvs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CvService {\n\n  constructor(private http: HttpClient) { }\n  getAll(): Observable<Cv[]> {\n    return this.http.get<Cv[]>(baseUrl);\n  }\n  get(id: any): Observable<Cv|undefined> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update( data: any,id:any): Observable<Cv|null> {\n      co\n    return this.http.put(`${baseUrl}/${id}`,data);\n  }\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  getCvById(id: any): Observable<Cv|undefined> {\n    return this.http.get<Cv>(`${baseUrl}?id=${id}`);\n  }\n\n\n  \n\n}\n"],"mappings":";;;AAIA,MAAMA,OAAO,GAAG,+BAA+B;AAO/C,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAOL,OAAO,CAAC;EACrC;EACAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC1C;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACtC;EAEAE,MAAMA,CAAEF,IAAS,EAACF,EAAM;IACpBK,EAAE;IACJ,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,EAACE,IAAI,CAAC;EAC/C;EACAK,MAAMA,CAACP,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACU,MAAM,CAAC,GAAGb,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC7C;EAEAQ,SAASA,CAACR,EAAO;IACf,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAK,GAAGL,OAAO,OAAOM,EAAE,EAAE,CAAC;EACjD;;SAxBWL,SAAS;;mBAATA,MAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAATjB,MAAS;EAAAkB,OAAA,EAATlB,MAAS,CAAAmB,IAAA;EAAAC,UAAA,EAHR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}