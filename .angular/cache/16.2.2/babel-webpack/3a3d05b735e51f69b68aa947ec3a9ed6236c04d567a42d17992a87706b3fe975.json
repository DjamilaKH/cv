{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/cv.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../formmcv/formmcv.component\";\nfunction EditcvComponent_app_formmcv_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-formmcv\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cv\", ctx_r0.cv);\n  }\n}\nexport class EditcvComponent {\n  constructor(router, route, cvService) {\n    this.router = router;\n    this.route = route;\n    this.cvService = cvService;\n    this.iseditCv = this.router.url.includes('edit');\n  }\n  ngOnInit() {\n    const cvId = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n      if (cvId) {\n        this.cvService.get(+cvId).subscribe(data => {\n          this.cvForm.get({\n            nom,\n            data,\n            nom,\n            prenom: data?.prenom,\n            email: data?.email,\n            telephone: data?.telephone,\n            titCV: data?.titCV,\n            profilCv: data?.profilCv,\n            objecCarri: data?.objecCarri\n          });\n        });\n        ;\n      }\n    }\n  }\n}\n_class = EditcvComponent;\n_class.ɵfac = function EditcvComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CvService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editcv\"]],\n  hostBindings: function EditcvComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditcvComponent_click_HostBindingHandler($event) {\n        return ctx.ngOnInit($event.target);\n      });\n    }\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"center\"], [3, \"cv\", 4, \"ngIf\"], [3, \"cv\"]],\n  template: function EditcvComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, EditcvComponent_app_formmcv_4_Template, 1, 1, \"app-formmcv\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Modifier CV \", ctx.cv == null ? null : ctx.cv.nom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.cv == null ? null : ctx.cv.titCV);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i3.NgIf, i4.FormmcvComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","cv","EditcvComponent","constructor","router","route","cvService","iseditCv","url","includes","ngOnInit","cvId","snapshot","paramMap","get","subscribe","data","cvForm","nom","prenom","email","telephone","titCV","profilCv","objecCarri","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","CvService","selectors","hostBindings","EditcvComponent_HostBindings","rf","ctx","$event","target","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","EditcvComponent_app_formmcv_4_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editcv\\editcv.component.ts"],"sourcesContent":["import { Component, HostListener, Input, OnInit} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editcv',\n  template: `\n  <h1 class=\"center\">Modifier CV {{cv?.nom}}</h1>\n  <p>{{cv?.titCV}}</p>\n  <app-formmcv *ngIf=\"cv\" [cv]=\"cv\"></app-formmcv>\n`,\n})\nexport class EditcvComponent implements OnInit {\n  cvForm!: FormGroup;\n  iseditCv!: boolean;\n   cv!: Cv|undefined ;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private cvService: CvService,\n  )\n  {\n    this.iseditCv=this.router.url.includes('edit')\n  }\n  @HostListener('click', ['$event.target'])\n  ngOnInit() {\n    const cvId: string|null = this.route.snapshot.paramMap.get('id');\n    if (this.iseditCv) {\n    if (cvId) {\n      this.cvService.get(+cvId).subscribe((data) => {\n        this.cvForm.get({\n          nom data?.nom,\n          prenom: data?.prenom,\n          email: data?.email,\n          telephone: data?.telephone,\n          titCV: data?.titCV,\n          profilCv: data?.profilCv,\n          objecCarri: data?.objecCarri\n        });\n      });;\n    }}}}"],"mappings":";;;;;;;;IAWEA,EAAA,CAAAC,SAAA,qBAAgD;;;;IAAxBD,EAAA,CAAAE,UAAA,OAAAC,MAAA,CAAAC,EAAA,CAAS;;;AAGnC,OAAM,MAAOC,eAAe;EAI1BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,SAAoB;IAFpB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IAGjB,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACH,MAAM,CAACI,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC;EAChD;EAEAC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAgB,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAChE,IAAI,IAAI,CAACP,QAAQ,EAAE;MACnB,IAAII,IAAI,EAAE;QACR,IAAI,CAACL,SAAS,CAACQ,GAAG,CAAC,CAACH,IAAI,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAI;UAC3C,IAAI,CAACC,MAAM,CAACH,GAAG,CAAC;YACdI,GAAG;YAACF,IAAI;YAAEE,GAAG;YACbC,MAAM,EAAEH,IAAI,EAAEG,MAAM;YACpBC,KAAK,EAAEJ,IAAI,EAAEI,KAAK;YAClBC,SAAS,EAAEL,IAAI,EAAEK,SAAS;YAC1BC,KAAK,EAAEN,IAAI,EAAEM,KAAK;YAClBC,QAAQ,EAAEP,IAAI,EAAEO,QAAQ;YACxBC,UAAU,EAAER,IAAI,EAAEQ;WACnB,CAAC;QACJ,CAAC,CAAC;QAAC;;;EACH;;SA5BOtB,eAAe;;mBAAfA,MAAe,EAAAL,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAA9B,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAE,cAAA,GAAA/B,EAAA,CAAA4B,iBAAA,CAAAI,EAAA,CAAAC,SAAA;AAAA;;QAAf5B,MAAe;EAAA6B,SAAA;EAAAC,YAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;eAAfC,GAAA,CAAAzB,QAAA,CAAA0B,MAAA,CAAAC,MAAA,CAAuB;MAAA;;;;;;;;MALlCxC,EAAA,CAAAyC,cAAA,YAAmB;MAAAzC,EAAA,CAAA0C,MAAA,GAAuB;MAAA1C,EAAA,CAAA2C,YAAA,EAAK;MAC/C3C,EAAA,CAAAyC,cAAA,QAAG;MAAAzC,EAAA,CAAA0C,MAAA,GAAa;MAAA1C,EAAA,CAAA2C,YAAA,EAAI;MACpB3C,EAAA,CAAA4C,UAAA,IAAAC,sCAAA,yBAAgD;;;MAF7B7C,EAAA,CAAA8C,SAAA,GAAuB;MAAvB9C,EAAA,CAAA+C,kBAAA,iBAAAT,GAAA,CAAAlC,EAAA,kBAAAkC,GAAA,CAAAlC,EAAA,CAAAiB,GAAA,KAAuB;MACvCrB,EAAA,CAAA8C,SAAA,GAAa;MAAb9C,EAAA,CAAAgD,iBAAA,CAAAV,GAAA,CAAAlC,EAAA,kBAAAkC,GAAA,CAAAlC,EAAA,CAAAqB,KAAA,CAAa;MACFzB,EAAA,CAAA8C,SAAA,GAAQ;MAAR9C,EAAA,CAAAE,UAAA,SAAAoC,GAAA,CAAAlC,EAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}