{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/cv.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nfunction EditformComponent_form_0_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Le prenom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditformComponent_form_0_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Le nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditformComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function EditformComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.Submit());\n    });\n    i0.ɵɵelementStart(1, \"mat-card\")(2, \"mat-form-field\");\n    i0.ɵɵelement(3, \"input\", 2);\n    i0.ɵɵtemplate(4, EditformComponent_form_0_mat_error_4_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\");\n    i0.ɵɵelement(6, \"input\", 4);\n    i0.ɵɵtemplate(7, EditformComponent_form_0_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵtext(9, \"\\nEnregistrer et Contunier\\n\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cvForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.cvForm.get(\"prenom\")) == null ? null : tmp_1_0.hasError(\"required\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.cvForm.get(\"nom\")) == null ? null : tmp_2_0.hasError(\"required\"));\n  }\n}\nexport class EditformComponent {\n  constructor(formBuilder, router, cvService, route) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.cvService = cvService;\n    this.route = route;\n    this.cvForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required]\n    });\n  }\n  Submit() {\n    this.cvService.update(this.cv, this.cv.id).subscribe(() => this.router.navigate(['/cv', this.cv.id]));\n    this.router.navigate(['/cv', this.cv.id]);\n  }\n}\n_class = EditformComponent;\n_class.ɵfac = function EditformComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CvService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-editform\"]],\n  inputs: {\n    cv: \"cv\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"name\", \"myForm\", \"class\", \"dimention\", \"style\", \"margin-top: 100px; margin-bottom: 100px\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"myForm\", 1, \"dimention\", 2, \"margin-top\", \"100px\", \"margin-bottom\", \"100px\", 3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Prenom\", \"required\", \"\", \"formControlName\", \"prenom\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Nom\", \"required\", \"\", \"formControlName\", \"nom\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 2, \"background-color\", \"#e6e0ed\", \"color\", \"#020005\"]],\n  template: function EditformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditformComponent_form_0_Template, 10, 3, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.cv);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatButton, i6.MatCard, i7.MatFormField, i7.MatError, i8.MatInput],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditformComponent_form_0_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","Submit","ɵɵelement","ɵɵtemplate","EditformComponent_form_0_mat_error_4_Template","EditformComponent_form_0_mat_error_7_Template","ɵɵproperty","ctx_r0","cvForm","ɵɵadvance","tmp_1_0","get","hasError","tmp_2_0","EditformComponent","constructor","formBuilder","router","cvService","route","group","nom","required","prenom","update","cv","id","subscribe","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","CvService","ActivatedRoute","selectors","inputs","decls","vars","consts","template","EditformComponent_Template","rf","ctx","EditformComponent_form_0_Template"],"sources":["C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editform\\editform.component.ts","C:\\Users\\nourijam\\Desktop\\cv-angular-nodejs-postgresql\\src\\app\\components\\editform\\editform.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cv } from 'src/app/models/cv.model';\nimport { CvService } from 'src/app/service/cv.service';\n\n@Component({\n  selector: 'app-editform',\n  templateUrl: './editform.component.html',\n  styleUrls: ['./editform.component.css']\n})\nexport class EditformComponent {\n  @Input() cv!:Cv\n  cvForm!: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private cvService: CvService,\n    private route: ActivatedRoute,) { \n      this.cvForm = this.formBuilder.group({\n        nom: (['', Validators.required]) ,\n        prenom:(['', Validators.required]),\n      });\n       } \n      Submit() {\n         this.cvService.update(this.cv, this.cv.id).subscribe(()=>this.router.navigate(['/cv',this.cv.id]),\n      ); \n       this.router.navigate(['/cv', this.cv.id])\n\n      }\n\n\n\n\n}\n","\n<form name=\"myForm\" *ngIf=\"cv\" [formGroup]=\"cvForm\" (ngSubmit)=\"Submit()\" class=\"dimention\" \nstyle=\"margin-top: 100px; margin-bottom: 100px\">\n<mat-card>\n<mat-form-field>\n<input matInput placeholder=\"Prenom\" required formControlName=\"prenom\"/>\n<mat-error *ngIf=\"cvForm.get('prenom')?.hasError('required')\">Le prenom est requis</mat-error>\n\n</mat-form-field>\n\n<mat-form-field>\n<input matInput placeholder=\"Nom\" required formControlName=\"nom\" />\n<mat-error *ngIf=\"cvForm.get('nom')?.hasError('required')\">Le nom est requis</mat-error>\n\n</mat-form-field>\n</mat-card>\n<button\nmat-raised-button style=\"background-color: #e6e0ed; color: #020005\" type=\"submit\">\nEnregistrer et Contunier\n</button>\n</form>\n<!-- [disabled]=\"cvForm.invalid\" -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}